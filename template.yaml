AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SCDIP editor web service
Parameters:
  Stage:
    Type: String
    Default: dev
  Range:
    Type: String
    Default: "*"
Resources:
  AttachmentsBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName:
        Fn::Join:
        - ''
        - [rekommend-attachments-, Ref: Stage]
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders: ['*']
          AllowedMethods: [GET]
          AllowedOrigins: ['*']
          ExposedHeaders: [Date]
          Id: rekommendCORSGetRule
          MaxAge: '3600'
        - AllowedHeaders: ['*']
          AllowedMethods: [PUT]
          AllowedOrigins: ['*']
          ExposedHeaders: [Date]
          Id: rekommendCORSPutRule
          MaxAge: '3600'
  
  MainTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      - AttributeName: sort
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      - AttributeName: sort
        KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      TableName:
        Fn::Join:
        - ''
        - [rekommend-, Ref: Stage]

  EditorApiAlias:
    Type: AWS::Serverless::Application
    Properties:
      Location: editor/.aws-sam/build/template.yaml
      Parameters:
        MainTable: 
          Ref: MainTable
        AttachmentsBucket:
          Ref: AttachmentsBucket
        Range:
          Ref: Range
        Stage:
          Ref: Stage

  PlayerApiAlias:
    Type: AWS::Serverless::Application
    Properties:
      Location: player/.aws-sam/build/template.yaml
      Parameters:
        MainTable: 
          Ref: MainTable
        AttachmentsBucket:
          Ref: AttachmentsBucket
        Range:
          Ref: Range
        Stage:
          Ref: Stage
Outputs:
  FilesBucketName:
    Description: Name of the Amazon S3 bucket that contains files with CORS enabled.
    Value: !Ref 'AttachmentsBucket'
  ApiURL:
    Description: Player API endpoint URL
    Value:
      Fn::GetAtt: [PlayerApiAlias, Outputs.ApiUrl]
  EditorApiURL:
    Description: Editor API endpoint URL
    Value:
      Fn::GetAtt: [EditorApiAlias, Outputs.EditorApiUrl]