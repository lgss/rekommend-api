AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: SCDIP editor web service
Parameters:
  Stage:
    Type: String
    Default: dev
  Range:
    Type: String
    Default: "*"
  MainTable:
    Type: String
  AttachmentsBucket:
    Type: String
Resources:
  RekommendEditorApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName:
        Ref: Stage
      Auth:
        ResourcePolicy:
          IpRangeWhitelist:
            - Ref: Range
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'authorization,content-type'"
        AllowOrigin: "'*'"
      OpenApiVersion: "2.0"

  # There seems to be a weird bug with SAM that means that the first function in a template
  # doesn't properly load local dependencies. This is essentially a dummy method
  None:
    Type: AWS::Serverless::Function
    Properties:
      Handler: parent.put
      Runtime: nodejs12.x
      CodeUri: src/

  PutJourneyParent:
    Type: AWS::Serverless::Function
    Properties:
      Handler: parent.put
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: MainTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MainTable
      Events:
        PutJourneyParent:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /journey-parent/{parentid}
            Method: put

  DeleteJourneyParent:
    Type: AWS::Serverless::Function
    Properties:
      Handler: parent.delete
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: MainTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MainTable
      Events:
        JourneyParent:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /journey-parent/{parentid}
            Method: delete

  PutJourney:
    Type: AWS::Serverless::Function
    Properties:
      Handler: journey.put
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: MainTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MainTable
      Events:
        CreateJourney:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /journeys
            Method: post
        UpdateJourney:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /journeys/{journeyid}
            Method: put

  DeleteJourneys:
    Type: AWS::Serverless::Function
    Properties:
      Handler: journey.delete
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: MainTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MainTable
      Events:
        Journey:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /journeys/{journeyid}
            Method: delete

  PutResource:
    Type: AWS::Serverless::Function
    Properties:
      Handler: resource.put
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: MainTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MainTable
      Events:
        Resource:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /resources/{resourceid}
            Method: put

  DeleteResource:
    Type: AWS::Serverless::Function
    Properties:
      Handler: resource.delete
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: MainTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MainTable
      Events:
        Resource:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /resources/{resourceid}
            Method: delete
  CheckResource:
    Type: AWS::Serverless::Function
    Properties:
      Handler: resource.check
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: MainTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MainTable
      Events:
        Resource:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /resources/check/{resourceid}
            Method: get
  GetContent:
    Type: AWS::Serverless::Function
    Properties:
      Handler: config.loadContent
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
        - DynamoDBReadPolicy:
            TableName:
              Ref: MainTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MainTable
      Events:
        ListContent:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /content/{contentId}
            Method: get

  SetContent:
    Type: AWS::Serverless::Function
    Properties:
      Handler: config.setContent
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: MainTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MainTable
      Events:
        SetContent:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /content/{contentId}
            Method: put

  SetTheme:
    Type: AWS::Serverless::Function
    Properties:
      Handler: config.setTheme
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
        - DynamoDBCrudPolicy:
            TableName:
              Ref: MainTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MainTable
      Events:
        SetTheme:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /theme
            Method: put

  SetFileURL:
    Type: AWS::Serverless::Function
    Properties:
      Handler: file.setFileURL
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
        - S3WritePolicy:
            BucketName:
              Ref: AttachmentsBucket
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: AttachmentsBucket
      Events:
        SetFileURL:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /file/{filename}
            Method: post

  DeleteFile:
    Type: AWS::Serverless::Function
    Properties:
      Handler: file.deleteFile
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
        - S3CrudPolicy:
            BucketName:
              Ref: AttachmentsBucket
      Environment:
        Variables:
          BUCKET_NAME:
            Ref: AttachmentsBucket
      Events:
        DeleteFileURL:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /file/{filename}
            Method: delete

  GetResources:
    Type: AWS::Serverless::Function
    Properties:
      Handler: resource.get
      Runtime: nodejs12.x
      CodeUri: src/
      Policies:
        - DynamoDBReadPolicy:
            TableName:
              Ref: MainTable
      Environment:
        Variables:
          TABLE_NAME:
            Ref: MainTable
      Events:
        FindResource:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /resource/{resourceid}
            Method: get
        ListResources:
          Type: Api
          Properties:
            RestApiId:
              Ref: RekommendEditorApi
            Path: /resources
            Method: get
Outputs:
  EditorApiUrl:
    Description: Editor API endpoint URL
    Value:
      Fn::Sub: https://${RekommendEditorApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}
